/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/dtr.js":
/*!*****************************!*\
  !*** ./resources/js/dtr.js ***!
  \*****************************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar weekday = new Array(7);\nweekday[0] = \"SUNDAY\";\nweekday[1] = \"MONDAY\";\nweekday[2] = \"TUESDAY\";\nweekday[3] = \"WEDNESDAY\";\nweekday[4] = \"THURSDAY\";\nweekday[5] = \"FRIDAY\";\nweekday[6] = \"SATURDAY\";\nvar month = new Array();\nmonth[0] = \"JAN\";\nmonth[1] = \"FEB\";\nmonth[2] = \"MAR\";\nmonth[3] = \"APR\";\nmonth[4] = \"May\";\nmonth[5] = \"JUN\";\nmonth[6] = \"JUL\";\nmonth[7] = \"AUG\";\nmonth[8] = \"SEP\";\nmonth[9] = \"OCT\";\nmonth[10] = \"NOV\";\nmonth[11] = \"DEC\";\nvar GLOBAL_TIMEIN_TIMEDATE = \"\";\nvar GLOBAL_TIMEOUT_TIMEDATE = \"\";\nvar GLOBAL_IS_TIMEIN = false; // timein\n\nvar GLOBAL_TIMEIN = \"\";\nvar GLOBAL_TIMEIN_TIME = \"\";\nvar GLOBAL_TIMEIN_DAY = \"\";\nvar GLOBAL_TIMEIN_FULLDATE = \"\";\n\nfunction getCurrentTimeIn() {\n  var currentTimeDate = new Date();\n  var hours = currentTimeDate.getHours();\n  var minutes = currentTimeDate.getMinutes();\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  var AMPM = hours >= 12 ? 'PM' : 'AM';\n\n  if (hours === 12) {\n    hours = 12;\n  } else {\n    hours = hours % 12;\n  }\n\n  var currentTime = \"\".concat(hours, \":\").concat(minutes).concat(AMPM);\n  var currentDay = weekday[currentTimeDate.getDay()];\n  var currentDate = currentTimeDate.getDate();\n  var currentMonth = month[currentTimeDate.getMonth()];\n  var CurrentYear = currentTimeDate.getFullYear();\n  var fullDate = \"\".concat(currentDate, \" \").concat(currentMonth, \" \").concat(CurrentYear);\n\n  if (!GLOBAL_IS_TIMEIN) {\n    document.querySelector(\"#timeIn_time\").innerHTML = currentTime;\n    document.querySelector(\"#timeIn_day\").innerHTML = currentDay;\n    document.querySelector(\"#timeIn_date\").innerHTML = fullDate;\n    GLOBAL_TIMEIN_TIMEDATE = currentTimeDate;\n  } else {\n    document.querySelector(\"#timeIn_time\").innerHTML = GLOBAL_TIMEIN_TIME;\n    document.querySelector(\"#timeIn_day\").innerHTML = GLOBAL_TIMEIN_DAY;\n    document.querySelector(\"#timeIn_date\").innerHTML = GLOBAL_TIMEIN_FULLDATE;\n  }\n\n  setTimeout(getCurrentTimeIn, 500);\n} // Timeout\n\n\nfunction getCurrentTimeOut() {\n  var currentTimeDate = new Date();\n  var hours = currentTimeDate.getHours();\n  var minutes = currentTimeDate.getMinutes();\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  var AMPM = hours >= 12 ? 'PM' : 'AM';\n\n  if (hours === 12) {\n    hours = 12;\n  } else {\n    hours = hours % 12;\n  }\n\n  var currentTime = \"\".concat(hours, \":\").concat(minutes).concat(AMPM);\n  var currentDay = weekday[currentTimeDate.getDay()];\n  var currentDate = currentTimeDate.getDate();\n  var currentMonth = month[currentTimeDate.getMonth()];\n  var CurrentYear = currentTimeDate.getFullYear();\n  var fullDate = \"\".concat(currentDate, \" \").concat(currentMonth, \" \").concat(CurrentYear);\n  document.querySelector(\"#timeOut_time\").innerHTML = currentTime;\n  document.querySelector(\"#timeOut_day\").innerHTML = currentDay;\n  document.querySelector(\"#timeOut_date\").innerHTML = fullDate;\n  GLOBAL_TIMEOUT_TIMEDATE = currentTimeDate;\n  setTimeout(getCurrentTimeOut, 500);\n}\n\nfunction populateData() {\n  var _console;\n\n  var formData = new FormData();\n  formData.append('user_id', $(\"#user_id\").val());\n\n  (_console = console).log.apply(_console, _toConsumableArray(formData));\n\n  $.ajax({\n    url: '/fetchData',\n    data: formData,\n    contentType: false,\n    cache: false,\n    processData: false,\n    type: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    success: function success(data) {\n      if (data.result == \"success\" && data.status == \"timeIn\") {\n        GLOBAL_IS_TIMEIN = true;\n        GLOBAL_TIMEIN = data.timeIn;\n        GLOBAL_TIMEIN_TIME = data.timeIn_time;\n        GLOBAL_TIMEIN_DAY = data.timeIn_day;\n        GLOBAL_TIMEIN_FULLDATE = data.timeIn_fulldate;\n        $(\"#time-in-button\").removeClass('btn-success').addClass('btn-danger');\n        $(\"#time-out-button\").removeClass('btn-secondary').addClass('btn-success');\n        $(\"#time-in-button\").html('Running');\n        $(\"#time-in-button\").attr(\"disabled\", true);\n        $(\".timein-card-header\").html('Last Time In');\n        $(\"#timeOut-div\").fadeIn(200);\n        $(\"#timeIn-div\").fadeOut(200);\n        document.querySelector(\"#timeIn_time\").innerHTML = GLOBAL_TIMEIN_TIME;\n        document.querySelector(\"#timeIn_day\").innerHTML = GLOBAL_TIMEIN_DAY;\n        document.querySelector(\"#timeIn_date\").innerHTML = GLOBAL_TIMEIN_FULLDATE;\n      } else if (data.result == \"empty\") {\n        GLOBAL_IS_TIMEIN = false;\n      } else {\n        GLOBAL_IS_TIMEIN = false;\n      }\n    },\n    error: function error(e) {\n      console.log(\"ERROR \");\n      console.log(e);\n    }\n  });\n}\n\nwindow.initialized_dtr_script = function () {\n  getCurrentTimeIn();\n  getCurrentTimeOut();\n  populateData(); // test time indf\n\n  $(\"#time-in-button\").on(\"click\", function () {\n    var _console2;\n\n    var formData = new FormData();\n    formData.append('user_id', $(\"#user_id\").val());\n    formData.append('timeIn', GLOBAL_TIMEIN_TIMEDATE);\n    formData.append('timeIn_time', $(\"#timeIn_time\").text());\n    formData.append('timeIn_day', $(\"#timeIn_day\").text());\n    formData.append('timeIn_fulldate', $(\"#timeIn_date\").text());\n\n    (_console2 = console).log.apply(_console2, _toConsumableArray(formData));\n\n    $.ajax({\n      url: '/timeIn',\n      data: formData,\n      contentType: false,\n      cache: false,\n      processData: false,\n      type: 'POST',\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      success: function success(data) {\n        if (data.result == \"success\") {\n          GLOBAL_IS_TIMEIN = true;\n          GLOBAL_TIMEIN = data.timeIn;\n          GLOBAL_TIMEIN_TIME = data.timeIn_time;\n          GLOBAL_TIMEIN_DAY = data.timeIn_day;\n          GLOBAL_TIMEIN_FULLDATE = data.timeIn_fulldate;\n          console.log(data);\n          $(\"#time-in-button\").removeClass('btn-success').addClass('btn-danger');\n          $(\"#time-out-button\").removeClass('btn-secondary').addClass('btn-success');\n          $(\"#time-in-button\").html('Running');\n          $(\"#time-in-button\").attr(\"disabled\", true);\n          $(\"#time-out-button\").attr(\"disabled\", false);\n          $(\".timein-card-header\").html('Last Time In');\n          $(\"#timeOut-div\").fadeIn(200);\n          $(\"#timeIn-div\").fadeOut(200);\n          document.querySelector(\"#timeIn_time\").innerHTML = GLOBAL_TIMEIN_TIME;\n          document.querySelector(\"#timeIn_day\").innerHTML = GLOBAL_TIMEIN_DAY;\n          document.querySelector(\"#timeIn_date\").innerHTML = GLOBAL_TIMEIN_FULLDATE;\n        } else {\n          GLOBAL_IS_TIMEIN = false;\n          window.alert(\"THERES SOMETHING WRONG\");\n        }\n      },\n      error: function error(e) {\n        console.log(e);\n      }\n    });\n  });\n  $(\".dtr-toggle-btn\").on('click', function () {\n    if ($(\"#timeIn-div\").is(\":visible\")) {\n      $(\"#timeIn-div\").fadeOut(50);\n      $(\"#timeOut-div\").fadeIn(50);\n    } else if ($(\"#timeOut-div\").is(\":visible\")) {\n      $(\"#timeOut-div\").fadeOut(50);\n      $(\"#timeIn-div\").fadeIn(50);\n    }\n  });\n  $(\"#time-out-button\").on(\"click\", function () {\n    var _console3;\n\n    var formData = new FormData();\n    formData.append('user_id', $(\"#user_id\").val());\n    formData.append('timeIn', GLOBAL_TIMEIN);\n    formData.append('timeOut', GLOBAL_TIMEOUT_TIMEDATE);\n    formData.append('timeOut_time', $(\"#timeOut_time\").text());\n    formData.append('timeOut_day', $(\"#timeOut_day\").text());\n    formData.append('timeOut_fulldate', $(\"#timeOut_date\").text());\n    var d1 = new Date(GLOBAL_TIMEOUT_TIMEDATE);\n    var d2 = new Date(GLOBAL_TIMEIN);\n    console.log(\"DATE: \", GLOBAL_TIMEIN);\n    var hours = parseFloat(Math.abs(d1 - d2) / 36e5).toFixed(2);\n    formData.append('number_hours', hours);\n\n    (_console3 = console).log.apply(_console3, _toConsumableArray(formData));\n\n    $.ajax({\n      url: '/timeOut',\n      data: formData,\n      contentType: false,\n      cache: false,\n      processData: false,\n      type: 'POST',\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      success: function success(data) {\n        if (data.result == \"success\") {\n          GLOBAL_IS_TIMEIN = false;\n          $(\"#time-in-button\").removeClass('btn-danger').addClass('btn-success');\n          $(\"#time-out-button\").removeClass('btn-success').addClass('btn-secondary');\n          $(\"#time-in-button\").html('TIME IN');\n          $(\"#time-in-button\").attr(\"disabled\", false);\n          $(\"#time-out-button\").attr(\"disabled\", true);\n          $(\".timein-card-header\").html('TIME IN');\n          $(\"#timeOut-div\").fadeOut(200);\n          $(\"#timeIn-div\").fadeIn(200);\n        } else if (data.result == 'failed') {\n          window.alert(\"Please do time in first!\");\n        }\n      },\n      error: function error(e) {\n        console.log(e);\n      }\n    });\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dtr.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/dtr.js"]();
/******/ 	
/******/ })()
;